"use strict";(self["webpackChunkeduardo_app"]=self["webpackChunkeduardo_app"]||[]).push([[856],{4856:function(e,t,o){o.r(t),o.d(t,{default:function(){return ke}});var s=o(3396),i=o(7139),a=o(9242);const n=e=>((0,s.dD)("data-v-6fe0587a"),e=e(),(0,s.Cn)(),e),r={class:"main-content"},c=["src"],d=n((()=>(0,s._)("i",{class:"fa-solid fa-chart-simple"},null,-1))),l=n((()=>(0,s._)("span",null,"Business Dashboard",-1))),h=n((()=>(0,s._)("summary",null,[(0,s._)("i",{class:"fa-solid fa-chart-line"}),(0,s.Uk)(" Inventory Options ")],-1))),m={class:"dropdown-menu"},p=n((()=>(0,s._)("i",{class:"fa-solid fa-chart-line"},null,-1))),g=n((()=>(0,s._)("span",null,"Room Inventory",-1))),u=n((()=>(0,s._)("i",{class:"fa-solid fa-chart-line"},null,-1))),_=n((()=>(0,s._)("span",null,"Shop Inventory",-1))),f=n((()=>(0,s._)("i",{class:"fa-solid fa-chart-line"},null,-1))),w=n((()=>(0,s._)("span",null,"Restaurant Reservations",-1))),y=n((()=>(0,s._)("i",{class:"fa-solid fa-chart-line"},null,-1))),b=n((()=>(0,s._)("span",null,"Enrollment Inventory",-1))),M=n((()=>(0,s._)("i",{class:"fa-solid fa-people-group"},null,-1))),k=n((()=>(0,s._)("span",null,"Team",-1))),v=n((()=>(0,s._)("i",{class:"fas fa-user"},null,-1))),I=n((()=>(0,s._)("span",null,"Users",-1))),D=n((()=>(0,s._)("i",{class:"fa-solid fa-table-columns"},null,-1))),E=n((()=>(0,s._)("span",null,"POS",-1))),C={class:"header"},A=n((()=>(0,s._)("h1",{class:"h1-main"},"EDUARDO'S ADMIN",-1))),S=n((()=>(0,s._)("i",{class:"fa-solid fa-bars",style:{padding:"5px",margin:"5px",width:"40px"}},null,-1))),T=[S],N=n((()=>(0,s._)("i",{class:"fas fa-power-off logout-icon"},null,-1))),$={class:"card-main"},R={class:"content"},F={class:"row"},V={class:"col-12"},Z={class:"card card-default"},q=n((()=>(0,s._)("div",{class:"card-header"},[(0,s._)("h2",{class:"fa-solid fa-person-swimming"}," Swimming Inventory"),(0,s._)("br")],-1))),B={class:"card-body"},P={class:"table-responsive",style:{"max-height":"400px","overflow-y":"auto"}},U={id:"productsTable",class:"table table-product",style:{width:"100%"}},L=n((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,"Enroll Id"),(0,s._)("th",null,"Account Id"),(0,s._)("th",null,"FullName"),(0,s._)("th",null,"Age"),(0,s._)("th",null,"Contact Number"),(0,s._)("th",null,"Experience"),(0,s._)("th",null,"Lesson Date"),(0,s._)("th",null,"Status"),(0,s._)("th",{class:"actions-header"},"Action")])],-1))),O={class:"dropdown"},x=["onClick"],z=n((()=>(0,s._)("span",{class:"selected"},"Actions",-1))),W=["onClick"],H=["onClick"],Q=["onClick"],Y={key:0,class:"alert alert-success",role:"alert"},K={class:"row"},j={class:"col-12"},G={class:"card card-default"},J={class:"card-header"},X=n((()=>(0,s._)("h2",{class:"fa-solid fa-person-swimming"}," Swimming Lesson Date Inventory",-1))),ee=n((()=>(0,s._)("br",null,null,-1))),te={class:"card-body"},oe={class:"table-responsive",style:{"max-height":"400px","overflow-y":"auto"}},se={id:"productsTable",class:"table table-product",style:{width:"100%"}},ie=n((()=>(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,"Date")])],-1))),ae={key:0,class:"modal show"},ne={class:"modal-dialog"},re={class:"modal-content"},ce={class:"modal-header"},de=n((()=>(0,s._)("h5",{class:"modal-title"},"Add Date",-1))),le={class:"modal-body"},he={class:"form-group"},me=n((()=>(0,s._)("label",{for:"swimming_date"},"Swimming Date",-1))),pe={class:"modal-footer"},ge=n((()=>(0,s._)("button",{type:"submit",class:"btn btn-custom"},"Add",-1)));function ue(e,t,n,S,ue,_e){const fe=(0,s.up)("Notification"),we=(0,s.up)("router-link");return(0,s.wg)(),(0,s.iD)(s.HY,null,[(0,s.Wm)(fe,{show:ue.notification.show,type:ue.notification.type,message:ue.notification.message},null,8,["show","type","message"]),(0,s._)("div",r,[(0,s._)("div",{class:(0,i.C_)(["sidebar",{collapsed:e.isSidebarCollapsed}])},[(0,s._)("img",{src:o(2894),alt:"Mono",class:"logo"},null,8,c),(0,s.Wm)(we,{to:"/admin2"},{default:(0,s.w5)((()=>[d,l])),_:1}),(0,s._)("details",null,[h,(0,s._)("div",m,[(0,s.Wm)(we,{to:"/analytics2"},{default:(0,s.w5)((()=>[p,g])),_:1}),(0,s.Wm)(we,{to:"/shopinventory"},{default:(0,s.w5)((()=>[u,_])),_:1}),(0,s.Wm)(we,{to:"/reservations"},{default:(0,s.w5)((()=>[f,w])),_:1}),(0,s.Wm)(we,{to:"/enrollment"},{default:(0,s.w5)((()=>[y,b])),_:1})])]),(0,s.Wm)(we,{to:"/teamadmin2"},{default:(0,s.w5)((()=>[M,k])),_:1}),(0,s.Wm)(we,{to:"/monitorusers2"},{default:(0,s.w5)((()=>[v,I])),_:1}),(0,s.Wm)(we,{to:"/pos2"},{default:(0,s.w5)((()=>[D,E])),_:1})],2),(0,s._)("div",C,[A,(0,s._)("button",{class:"navbar-toggler",type:"button",onClick:t[0]||(t[0]=(...t)=>e.toggleSidebar&&e.toggleSidebar(...t))},T),(0,s._)("button",{onClick:t[1]||(t[1]=(...e)=>_e.logout&&_e.logout(...e)),class:"btn btn-custom logout-logo-btn"},[N,(0,s.Uk)(" Logout ")])]),(0,s._)("div",$,[(0,s._)("div",R,[(0,s._)("div",F,[(0,s._)("div",V,[(0,s._)("div",Z,[q,(0,s._)("div",B,[(0,s._)("div",P,[(0,s._)("table",U,[L,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(ue.enroll,(e=>((0,s.wg)(),(0,s.iD)("tr",{key:e.enroll_id},[(0,s._)("td",null,(0,i.zw)(e.enroll_id),1),(0,s._)("td",null,(0,i.zw)(e.id),1),(0,s._)("td",null,(0,i.zw)(e.fullname),1),(0,s._)("td",null,(0,i.zw)(e.age),1),(0,s._)("td",null,(0,i.zw)(e.contact_number),1),(0,s._)("td",null,(0,i.zw)(e.experience),1),(0,s._)("td",null,(0,i.zw)(e.lesson_date),1),(0,s._)("td",null,(0,i.zw)(e.enrollment_status),1),(0,s._)("td",null,[(0,s._)("div",O,[(0,s._)("div",{class:"select",onClick:t=>_e.toggleDropdown(e.enroll_id)},[z,(0,s._)("div",{class:(0,i.C_)(["caret",{"caret-rotate":ue.openDropdown===e.enroll_id}])},null,2)],8,x),(0,s._)("ul",{class:(0,i.C_)(["menu",{"menu-open":ue.openDropdown===e.enroll_id}])},[(0,s._)("li",{onClick:t=>_e.handleDropdownAction("Paid",e.enroll_id)},"Paid",8,W),(0,s._)("li",{onClick:t=>_e.handleDropdownAction("Accept",e.enroll_id)},"Accept",8,H),(0,s._)("li",{onClick:t=>_e.handleDropdownAction("Decline",e.enroll_id)},"Decline",8,Q)],2)])])])))),128))])]),ue.successMessage?((0,s.wg)(),(0,s.iD)("div",Y,(0,i.zw)(ue.successMessage),1)):(0,s.kq)("",!0)])])])])])]),(0,s._)("div",K,[(0,s._)("div",j,[(0,s._)("div",G,[(0,s._)("div",J,[X,ee,(0,s._)("button",{type:"button",class:"btn btn-custom",onClick:t[2]||(t[2]=(...e)=>_e.openAddDateModal&&_e.openAddDateModal(...e))}," Add Date ")]),(0,s._)("div",te,[(0,s._)("div",oe,[(0,s._)("table",se,[ie,(0,s._)("tbody",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(ue.dates,(e=>((0,s.wg)(),(0,s.iD)("tr",{key:e},[(0,s._)("td",null,(0,i.zw)(e),1)])))),128))])])])])])])]),ue.addDateModalVisible?((0,s.wg)(),(0,s.iD)("div",ae,[(0,s._)("div",ne,[(0,s._)("div",re,[(0,s._)("div",ce,[de,(0,s._)("button",{type:"button",class:"close",onClick:t[3]||(t[3]=(...e)=>_e.closeAddDateModal&&_e.closeAddDateModal(...e))}," Ã— ")]),(0,s._)("form",{onSubmit:t[6]||(t[6]=(0,a.iM)(((...e)=>_e.saveDate&&_e.saveDate(...e)),["prevent"])),enctype:"multipart/form-data"},[(0,s._)("div",le,[(0,s._)("div",he,[me,(0,s.wy)((0,s._)("input",{type:"date",class:"form-control",placeholder:"Date","onUpdate:modelValue":t[4]||(t[4]=e=>ue.swimming_date=e),required:""},null,512),[[a.nr,ue.swimming_date]])])]),(0,s._)("div",pe,[(0,s._)("button",{type:"button",class:"btn btn-custom",style:{background:"#0F172B",border:"none"},onClick:t[5]||(t[5]=(...e)=>_e.closeAddDateModal&&_e.closeAddDateModal(...e))},"Close"),ge])],32)])])])):(0,s.kq)("",!0),(0,s.Wm)(fe,{show:ue.notification.show,type:ue.notification.type,message:ue.notification.message,class:"bottom-right-notification"},null,8,["show","type","message"])])])],64)}o(560);var _e=o(1076),fe=o(7516),we=(o(2166),o(9754)),ye={name:"admin2",components:{Notification:we.Z},data(){return{cottages:[],cottage_name:"",cottage_description:"",cottage_price:"",cottage_img:null,successMessage:"",addCottageModalVisible:!1,editCottageModalVisible:!1,editedCottage:null,tables:[],table_name:"",table_description:"",editedTable:null,addTableModalVisible:!1,editTableModalVisible:!1,successMessage:"",reservations:[],statusModalVisible:!1,detailsModalVisible:!1,selectedReservation:{},statusToUpdate:"",successMessage:"",errorMessage:"",menuItems:[],selectedImage:null,currentItem:{menu_id:null,item_name:"",item_category:"",item_price:""},addModalItemVisible:!1,editMenuItemModalVisible:!1,editedMenuItem:{item_name:"",item_category:"",item_price:"",item_image:null},item_name:"",item_category:"",item_price:"",successMessage:"",errorMessage:"",currentItem:{},addDateModalVisible:!1,successMessageDate:null,successMessage:null,flatpickrInstance:null,selectedDate:null,dates:[],orders:[],loading:!1,editRoomModalVisible:!1,editedRoom:null,editModalVisible:!1,editedInfo:null,room:[],book:[],enroll:[],infos:[],shop:[],date:[],swimming_date:"",successMessage2:"",addModalVisible:!1,prod_img:"",prod_name:"",prod_quantity:"",prod_desc:"",prod_price:"",addingItemId:null,quantityModalVisible:!1,selectedProduct:null,quantityToAdd:0,successMessage:"",notification:{show:!1,type:"",message:""},addRoomModalVisible:!1,room_name:"",price:"",packs:"3",description:"",downpayment:"",room_img:"",ConfirmationVisible:!1,openDropdown:null,successMessage:"",bookings:[],successMessage:"",errorMessage:"",notification:{show:!1,type:"success",message:""}}},mounted(){this.getCottages(),this.fetchTables(),this.fetchCottageBookings(),this.fetchReservations(),this.fetchMenuItems(),this.getBook(),this.initializeDropdowns()},beforeDestroy(){this.$nextTick((()=>{const e=document.querySelectorAll(".dropdown");e.forEach((e=>{const t=e.querySelector(".select"),o=e.querySelectorAll(".menu li");t.removeEventListener("click",this.handleDropdownClick),o.forEach((e=>{e.removeEventListener("click",this.handleOptionClick)}))}))})),this.getDate()},created(){this.getInfo(),this.getRoom(),this.getBook(),this.getenroll(),this.getDate(),this.fetchOrdersForAllUsers()},methods:{handleCottageImageUpload(){const e=this.$refs.cottageImageInput,t=e.files[0],o=new FormData;o.append("cottage_image",t),this.cottage_img=o},async saveCottage(e){try{let t={};"add"===e&&(this.cottage_img instanceof FormData?(t=this.cottage_img,t.append("cottage_name",this.cottage_name),t.append("cottage_description",this.cottage_description),t.append("cottage_price",this.cottage_price)):t={cottage_name:this.cottage_name,cottage_description:this.cottage_description,cottage_price:this.cottage_price});await _e.Z.post("/cottages",t);"add"===e&&(this.closeCottageAddModal(),this.cottage_name="",this.cottage_description="",this.cottage_price="",this.getCottages(),this.showNotification("Cottage Added Successfully","success"))}catch(t){console.error(t),this.showNotification("Error adding cottage","error")}},openCottageEditModal(e){this.editedCottage={...e},this.editCottageModalVisible=!0},closeCottageEditModal(){this.editedCottage=null,this.editCottageModalVisible=!1,this.showNotification("Cottage Updated Successfully","success")},async saveCottageEdit(){try{const e=new FormData;e.append("cottage_name",this.editedCottage.cottage_name),e.append("cottage_description",this.editedCottage.cottage_description),e.append("cottage_price",this.editedCottage.cottage_price),this.editedCottage.newImage&&e.append("cottage_image",this.editedCottage.newImage);const t=`/cottages/update/${this.editedCottage.cottage_id}`;await _e.Z.post(t,e,{headers:{"Content-Type":"multipart/form-data"}});this.closeCottageEditModal(),this.getCottages(),this.showNotification("Cottage Updated Successfully","success")}catch(e){console.error("Error updating cottage:",e),this.showNotification("Error updating cottage","error")}},handleEditCottageImageUpload(){const e=this.$refs.editCottageImageInput,t=e.files[0];this.editedCottage.newImage=t},async getCottages(){try{const e=await _e.Z.get("/cottages");this.cottages=e.data}catch(e){console.error("Error fetching cottages:",e)}},showCottageSuccessNotification(e){this.successMessage=e,setTimeout((()=>{this.successMessage=""}),3e3)},openCottageAddModal(){this.addCottageModalVisible=!0},closeCottageAddModal(){this.addCottageModalVisible=!1},async fetchTables(){try{const e=await _e.Z.get("/getTables");this.tables=e.data}catch(e){console.error("Error fetching tables:",e)}},async saveTable(){try{const e={table_name:this.table_name,table_description:this.table_description};await _e.Z.post("/addTable",e),this.closeAddTableModal(),this.fetchTables(),this.showNotification("Table added successfully!","success")}catch(e){console.error("Error saving table:",e)}},async updateTable(){try{const e={table_name:this.editedTable.table_name,table_description:this.editedTable.table_description};await _e.Z.post(`/updateTable/${this.editedTable.table_id}`,e),this.closeEditTableModal(),this.fetchTables(),this.showNotification("Table updated successfully!","success")}catch(e){console.error("Error updating table:",e)}},showNotification(e,t){this.notification.message=e,this.notification.type=t,this.notification.show=!0,setTimeout((()=>{this.notification.show=!1}),3e3)},openAddTableModal(){this.addTableModalVisible=!0},closeAddTableModal(){this.addTableModalVisible=!1,this.clearTableForm()},openEditTableModal(e){this.editedTable={...e},this.editTableModalVisible=!0},closeEditTableModal(){this.editTableModalVisible=!1},clearTableForm(){this.table_name="",this.table_description=""},async declineCottageBooking(e){try{const t=await _e.Z.post(`api/cottage-bookings/decline/${e}`);200===t.status?(this.showSuccessNotification(`Cottage booking ${e} has been declined.`),this.fetchCottageBookings()):(console.error("Failed to decline cottage booking:",t.data.message),this.showErrorNotification(`Failed to decline booking: ${t.data.message}`))}catch(t){t.response&&400===t.response.status?this.showErrorNotification("Cannot decline a confirmed booking."):(console.error("Error declining cottage booking:",t),this.showErrorNotification("An error occurred while declining the cottage booking."))}},async confirmCottageBooking(e){try{const t=await _e.Z.post(`api/cottage-bookings/confirm/${e}`);200===t.status?(this.showSuccessNotification(`Cottage booking ${e} has been confirmed.`),this.fetchCottageBookings()):(console.error("Failed to confirm cottage booking:",t.data.message),this.showErrorNotification(`Failed to confirm booking: ${t.data.message}`))}catch(t){console.error("Error confirming cottage booking:",t),this.showErrorNotification("An error occurred while confirming the cottage booking.")}},async markCottageBookingAsPaid(e){try{const t=await _e.Z.post(`api/cottage-bookings/mark-paid/${e}`);200===t.status?(this.showSuccessNotification(`Cottage booking ${e} marked as paid.`),this.fetchCottageBookings()):(console.error("Failed to mark cottage booking as paid:",t.data.message),this.showErrorNotification(`Failed to mark booking as paid: ${t.data.message}`))}catch(t){console.error("Error marking cottage booking as paid:",t),this.showErrorNotification("An error occurred while marking the cottage booking as paid.")}},async fetchCottageBookings(){try{const e=await _e.Z.get("api/cottage-bookings");this.bookings=e.data}catch(e){console.error("Error fetching cottage bookings:",e),this.errorMessage="Failed to load cottage booking data."}},async fetchReservations(){try{const e=await _e.Z.get("/admin/reservations");this.reservations=e.data}catch(e){console.error("Error fetching reservations:",e),this.errorMessage="Failed to load reservation data."}},openStatusModal(e){this.selectedReservation=e,this.statusToUpdate=e.status,this.statusModalVisible=!0},closeStatusModal(){this.statusModalVisible=!1},async declineReservation(e){try{const t=await _e.Z.post(`reservation/decline/${e}`);200===t.status?(this.showSuccessNotification(`Reservation ${e} has been declined.`),this.fetchReservations()):(console.error("Failed to decline reservation:",t.data.message),this.showErrorNotification(`Failed to decline reservation: ${t.data.message}`))}catch(t){console.error("Error declining reservation:",t),this.showErrorNotification("An error occurred while declining the reservation.")}},async acceptReservation(e){try{const t=await _e.Z.post(`reservation/confirm/${e}`);200===t.status?(this.showSuccessNotification(`Reservation ${e} has been accepted.`),this.fetchReservations()):(console.error("Failed to accept reservation:",t.data.message),this.showErrorNotification(`Failed to accept reservation: ${t.data.message}`))}catch(t){console.error("Error accepting reservation:",t),this.showErrorNotification("An error occurred while accepting the reservation.")}},async markReservationAsPaid(e){try{const t=await _e.Z.post(`reservation/paid/${e}`);200===t.status?(this.showSuccessNotification(`Reservation ${e} Marked as Paid`),this.fetchReservations()):console.error("Failed to mark reservation as paid:",t.data.message)}catch(t){console.error("Error marking reservation as paid:",t)}},showSuccessNotification(e){console.log(`Success: ${e}`)},viewDetails(e){this.selectedReservation=e,this.detailsModalVisible=!0},closeDetailsModal(){this.detailsModalVisible=!1},async fetchMenuItems(){try{const e=await _e.Z.get("/api/menu");this.menuItems=e.data}catch(e){console.error(e)}},openAddItemModal(){this.addModalItemVisible=!0},closeAddItemModal(){this.addModalItemVisible=!1},onFileChange(e){const t=e.target.files[0];t&&(this.item_image=t)},async addMenuItem(){const e=new FormData;e.append("item_name",this.item_name),e.append("item_category",this.item_category),e.append("item_price",this.item_price),this.item_image&&e.append("item_image",this.item_image);try{const t=await _e.Z.post("https://eduardos-resort.online/backend/api/menu",e,{headers:{"Content-Type":"multipart/form-data"}});"success"===t.data.status?(this.showSuccessNotification(t.data.message),this.clearForm(),this.closeAddItemModal(),this.fetchMenuItems()):(console.error("Error from server:",t.data.message,t.data.errors),this.showErrorNotification(t.data.message))}catch(t){console.error("An error occurred:",t),this.handleError(t)}},clearForm(){this.item_name="",this.item_category="",this.item_price="",this.item_image=null},showSuccessNotification(e){this.successMessage=e,setTimeout((()=>{this.successMessage=""}),3e3)},showErrorNotification(e){this.errorMessage=e,setTimeout((()=>{this.errorMessage=""}),5e3)},openEditItemModal(e){if(!e.menu_id)return console.error("Item ID is missing."),void this.showErrorNotification("Item ID is missing.");this.editedMenuItem={menu_id:e.menu_id,item_name:e.item_name,item_category:e.item_category,item_price:e.item_price,item_image:null},console.log("Selected item for editing:",this.editedMenuItem),this.editMenuItemModalVisible=!0},closeMenuItemEditModal(){this.editMenuItemModalVisible=!1,this.editedMenuItem={item_name:"",item_category:"",item_price:"",item_image:null}},handleMenuItemImageUpload(){const e=this.$refs.editMenuItemImageInput,t=e.files[0];t&&(this.editedMenuItem.item_image=t,console.log("Selected image file:",t))},async saveMenuItemEdit(){try{const e=new FormData;e.append("item_name",this.editedMenuItem.item_name),e.append("item_category",this.editedMenuItem.item_category),e.append("item_price",this.editedMenuItem.item_price),this.editedMenuItem.item_image&&e.append("item_image",this.editedMenuItem.item_image);const t=await _e.Z.post(`https://eduardos-resort.online/backend/api/menu/${this.editedMenuItem.menu_id}`,e,{headers:{"Content-Type":"multipart/form-data"}});console.log("Item updated successfully:",t.data),this.showSuccessNotification(t.data.message||"Item updated successfully!"),this.closeMenuItemEditModal(),this.fetchMenuItems()}catch(e){console.error("Error updating item:",e),this.showErrorNotification("Failed to update item.")}},showSuccessNotification(e){this.successMessage=e,setTimeout((()=>this.successMessage=""),3e3)},showErrorNotification(e){this.errorMessage=e,setTimeout((()=>this.errorMessage=""),5e3)},clearForm(){this.currentItem={menu_id:null,item_name:"",item_category:"",item_price:""}},async deleteItem(e){try{await _e.Z.delete(`/api/menu/${e}`),this.successMessage="Item deleted successfully!",this.fetchMenuItems()}catch(t){console.error(t)}},isActive(e){return this.$route.path===e},openAddDateModal(){this.addDateModalVisible=!0},closeAddDateModal(){this.addDateModalVisible=!1},openDatePicker(){this.flatpickrInstance.open()},async logout(){try{const e=await _e.Z.post("/logout");if(200!==e.status)throw new Error("Logout failed");console.log("Logout successful"),sessionStorage.removeItem("token"),sessionStorage.removeItem("id"),localStorage.clear(),this.userInfo={},this.user=[],this.notifications=[],this.eventName="",this.eventTheme="",this.eventDate="",this.manifest="",this.hasBooking=!1,this.feed=[],document.cookie.split(";").forEach((e=>{document.cookie=e.replace(/^ +/,"").replace(/=.*/,"=;expires="+(new Date).toUTCString()+";path=/")})),this.notification={show:!0,type:"success",message:"You have been logged out successfully."},setTimeout((()=>{this.$router.push("/")}),1e3)}catch(e){console.error("Error during logout",e),this.notification={show:!0,type:"error",message:"Logout failed. Please try again."},setTimeout((()=>{this.notification.show=!1}),1e3)}},async getBook(){try{const e=await _e.Z.get("/getbook");this.book=e.data}catch(e){console.error("Error fetching books:",e)}},async declineBooking(e){try{const t=await _e.Z.post(`/api/decline-booking/${e}`);200===t.status?(this.showSuccessNotification(`Booking ${e} Declined`),this.getBook()):console.error("Failed to decline booking:",t.data.message)}catch(t){console.error("Error declining booking:",t)}},async markAsPaid(e){try{const t=await _e.Z.post(`/mark-as-paid/${e}`);200===t.status?(this.showSuccessNotification(`Booking ${e} Marked as Paid`),this.getBook()):console.error("Failed to mark as paid:",t.data.message)}catch(t){console.error("Error marking as paid:",t)}},async acceptBooking(e){try{const t=await _e.Z.post(`/accept-booking/${e}`);200===t.status?(this.showSuccessNotification(`Booking ${e} Accepted`),this.getBook()):console.error("Failed to accept booking:",t.data.message)}catch(t){console.error("Error accepting booking:",t)}},async declineenrolling(e){try{const t=await _e.Z.post(`/api/decline-enroll/${e}`);200===t.status?(this.showSuccessNotification(`Enrolling ${e} Declined`),this.getenroll(),this.$emit("data-saved")):console.error("Failed to decline enroll:",t.data.message)}catch(t){console.error("Error declining enroll:",t)}},fetchOrdersForAllUsers(){this.loading=!0,_e.Z.get("/api/orders").then((e=>(console.log(e.data),this.orders=e.data.orders,this.orders.filter((e=>"paid"!==e.order_status))))).catch((e=>{console.error("Error fetching orders:",e)})).finally((()=>{this.loading=!1}))},markOrderPaid(e){_e.Z.post(`/api/mark-order-paid/${e}`).then((e=>{console.log("Mark order paid response:",e.data),this.fetchOrdersForAllUsers()})).catch((e=>{console.error("Error marking order as paid:",e.response?e.response.data:e)}))},confirmOrder(e){_e.Z.post(`/api/confirm-order/${e}`).then((e=>{console.log("Confirm order response:",e.data),this.fetchOrdersForAllUsers()})).catch((e=>{console.error("Error confirming order:",e.response?e.response.data:e)}))},declineOrder(e){_e.Z.post(`/api/decline-order/${e}`).then((e=>{console.log("Decline order response:",e.data),this.fetchOrdersForAllUsers()})).catch((e=>{console.error("Error declining order:",e.response?e.response.data:e)}))},openRoomEditModal(e){this.editedRoom={...e},this.editRoomModalVisible=!0},closeRoomEditModal(){this.editedRoom=null,this.editRoomModalVisible=!1},async saveRoomEdit(){try{const e={room_name:this.editedRoom.room_name,price:this.editedRoom.price,downpayment:this.editedRoom.downpayment,description:this.editedRoom.description,room_status:this.editedRoom.room_status},t=`/updateRoom/${this.editedRoom.room_id}`,o=await _e.Z.put(t,e);console.log("Room updated successfully:",o.data),this.closeRoomEditModal(),this.showSuccessNotification("Room Updated Successfully"),this.getRoom()}catch(e){console.error("Error updating room:",e),this.showErrorNotification("Failed to update room")}},openAddRoomModal(){this.addRoomModalVisible=!0},closeAddRoomModal(){this.addRoomModalVisible=!1},handleRoomImageUpload(){const e=this.$refs.roomImageInput,t=e.files[0],o=new FormData;o.append("image",t),this.room_img=o},async saveRoom(){try{const e=this.room_img;e.append("room_name",this.room_name),e.append("price",this.price),e.append("downpayment",this.downpayment),e.append("packs",this.packs),e.append("description",this.description),this.showSuccessNotification("Room Added Successfully");await _e.Z.post("saveRoom",e);this.closeAddRoomModal(),this.room_img="",this.room_name="",this.price="",this.downpayment="",this.packs="",this.description="",this.getRoom(),this.getbook()}catch(e){console.error(e)}},async markthisPaid(e){try{const t=await _e.Z.post(`/mark-this-paid/${e}`);200===t.status?(this.showSuccessNotification(`enrollment ${e} Marked this Paid`),this.$emit("data-saved")):console.error("Failed to mark this paid:",t.data.message)}catch(t){console.error("Error marking this paid:",t)}},initializeDropdowns(){this.$nextTick((()=>{const e=document.querySelectorAll(".dropdown");e.forEach((e=>{const t=e.querySelector(".select"),o=e.querySelector(".caret"),s=e.querySelector(".menu"),i=e.querySelectorAll(".menu li"),a=e.querySelector(".selected");t.addEventListener("click",(()=>{t.classList.toggle("select-clicked"),o.classList.toggle("caret-rotate"),s.classList.toggle("menu-open")})),i.forEach((e=>{e.addEventListener("click",(()=>{a.innerText=e.innerText,t.classList.remove("select-clicked"),o.classList.remove("caret-rotate"),s.classList.remove("menu-open"),i.forEach((e=>{e.classList.remove("active")})),e.classList.add("active")}))}))}))}))},toggleDropdown(e){this.openDropdown=this.openDropdown===e?null:e},toggleDropdown(e){this.openDropdown=this.openDropdown===e?null:e},toggleDropdown(e){this.openDropdown=this.openDropdown===e?null:e},handleDropdownAction(e,t){"Paid"===e?this.markthisPaid(t):"Accept"===e?this.acceptenrolling(t):"Decline"===e&&this.declineenrolling(t),this.openDropdown=null},handleDropdownAction(e,t){"markOrderPaid"===e?this.markOrderPaid(t):"confirmOrder"===e?this.confirmOrder(t):"declineOrder"===e&&this.declineOrder(t),this.openDropdown=null},handleDropdownAction(e,t){"markAsPaid"===e?this.markAsPaid(t):"acceptBooking"===e?this.acceptBooking(t):"declineBooking"===e&&this.declineBooking(t),this.openDropdown=null},showSuccessNotification(e){this.successMessage=e,setTimeout((()=>{this.successMessage=""}),3e3)},async acceptenrolling(e){try{const t=await _e.Z.post(`/accept-enrolling/${e}`);if(200===t.status){const e=t.data.enroll_id;this.showSuccessNotification(`Enrolling ${e} Accepted`),this.getenroll(),this.$emit("data-saved")}else console.error("Failed to accept enrolling:",t.data.message)}catch(t){console.error("Error accepting enrolling:",t)}},async getRoom(){const e=await _e.Z.get("/getRoom");this.room=e.data,this.getBook()},async getenroll(){const e=await _e.Z.get("/getenroll");this.enroll=e.data},async saveDate(){try{const e=await _e.Z.post("https://eduardos-resort.online/saveDate",{swimming_date:this.swimming_date});this.successMessageDate=e.data.message,this.dates.push(this.swimming_date),this.closeAddDateModal()}catch(e){console.error("Error saving date:",e);const t=e.response?e.response.data.message:"Unknown error occurred.";this.successMessageDate="Failed to save date: "+t}},async getDate(){try{const e=await _e.Z.get("/getDate");e&&200===e.status?e.data&&Array.isArray(e.data)?(this.dates=e.data,this.initFlatpickr()):console.error("Error fetching dates: Response data is empty or not an array"):console.error("Error fetching dates: Invalid response status")}catch(e){console.error("Error fetching dates:",e)}},initFlatpickr(){this.flatpickrInstance=(0,fe.Z)(this.$refs.datepicker,{dateFormat:"Y-m-d",enable:this.dates,onClose:e=>{this.selectedDate=e[0]}})},navigateToAuditHistory(e){const t=e.shop_id;this.$router.push({name:"auditHistory",params:{shopId:t}})},async getAuditHistory(e){try{const t=await _e.Z.get(`/api/audit/history/${e}`);this.auditHistory=t.data}catch(t){console.error("Error fetching audit history:",t)}},openQuantityModal(e){this.selectedProduct=e,this.quantityToAdd=0,this.quantityModalVisible=!0},closeQuantityModal(){this.selectedProduct=null,this.quantityToAdd=0,this.quantityModalVisible=!1},async addQuantity(){const e={...this.selectedProduct};e.prod_quantity+=parseInt(this.quantityToAdd);await _e.Z.put(`/updateQuantity/${e.shop_id}`,{id:e.id,quantity:this.quantityToAdd});const t=this.infos.findIndex((t=>t.id===e.id));this.infos[t]=e,this.closeQuantityModal(),this.showSuccessNotification("Quantity Updated Successfully"),this.getInfo(),this.$emit("data-saved")},showSuccessNotification(e){this.notification={show:!0,type:"success",message:e},setTimeout((()=>{this.notification.show=!1}),2e3)},showErrorNotification(e){this.notification={show:!0,type:"error",message:e},setTimeout((()=>{this.notification.show=!1}),2e3)},async getInfo(){try{const e=await _e.Z.get("getDataShop");this.infos=e.data,this.shop=e.data}catch(e){console.log(e)}},openAddModal(){this.addModalVisible=!0},closeAddModal(){this.addModalVisible=!1},handleImageUpload(){const e=this.$refs.imageInput,t=e.files[0],o=new FormData;o.append("prod_image",t),this.prod_img=o},async saveShop(e){try{let t={};"add"===e&&(this.prod_img instanceof FormData?(t=this.prod_img,t.append("prod_name",this.prod_name),t.append("prod_quantity",this.prod_quantity),t.append("prod_desc",this.prod_desc),t.append("prod_price",this.prod_price),this.showSuccessNotification("Product Added Successfully")):t={prod_name:this.prod_name,prod_quantity:this.prod_quantity,prod_desc:this.prod_desc,prod_price:this.prod_price});await _e.Z.post("saveShop",t);"add"===e&&(this.closeAddModal(),this.prod_img="",this.prod_name="",this.prod_quantity="",this.prod_desc="",this.prod_price="",this.getInfo())}catch(t){console.error(t)}},openEditModal(e){this.editedInfo={...e},this.editModalVisible=!0},closeEditModal(){this.editedInfo=null,this.editModalVisible=!1,this.showSuccessNotification("Product Updated Successfully")},async saveEdit(){try{const e=new FormData;e.append("prod_name",this.editedInfo.prod_name),e.append("prod_desc",this.editedInfo.prod_desc),e.append("prod_price",this.editedInfo.prod_price),this.editedInfo.newImage&&e.append("prod_img",this.editedInfo.newImage);const t=`/updateShop/${this.editedInfo.shop_id}`,o=await _e.Z.post(t,e,{headers:{"Content-Type":"multipart/form-data"}});console.log("Product updated successfully:",o.data),this.closeEditModal(),this.showSuccessNotification("Product Updated Successfully"),this.getInfo(),this.$emit("data-saved")}catch(e){console.error("Error updating product:",e)}},handleEditImageUpload(){const e=this.$refs.editImageInput,t=e.files[0];this.editedInfo.newImage=t}}},be=o(89);const Me=(0,be.Z)(ye,[["render",ue],["__scopeId","data-v-6fe0587a"]]);var ke=Me},2894:function(e,t,o){e.exports=o.p+"img/logo1.png.63b3f6c0.png"}}]);
//# sourceMappingURL=856.cd7166e0.js.map